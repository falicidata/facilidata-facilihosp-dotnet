// <auto-generated />
using System;
using Facilidata.FaciloHosp.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Facilidata.FaciloHosp.Infra.Data.Migrations
{
    [DbContext(typeof(ContextSQL))]
    [Migration("20200511025911_exameFormato")]
    partial class exameFormato
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Facilidata.FaciliHosp.Domain.Entidades.Exame", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("AtualizadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Fornecedor")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FornecedorId")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Resultado")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000);

                    b.Property<string>("TipoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TipoOutro")
                        .HasColumnType("varchar(251)")
                        .HasMaxLength(251);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("Exames");
                });

            modelBuilder.Entity("Facilidata.FaciliHosp.Domain.Entidades.ExameTipo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("AtualizadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExameTipos");
                });

            modelBuilder.Entity("Facilidata.FaciliHosp.Domain.Entidades.Exame", b =>
                {
                    b.HasOne("Facilidata.FaciliHosp.Domain.Entidades.ExameTipo", "Tipo")
                        .WithMany("Exames")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
